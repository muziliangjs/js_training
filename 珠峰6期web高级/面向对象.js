/* 
什么是面向对象编程？
  + 对象：泛指，万物皆对象（js中所有我们学习的研究和开发的都是对象·研究对象·）
  + 类: 对“对象”的一个细分，按照对应的特点，分成我们大类和小类·类别· 
  + 实例：某个类别当中具体的事物
  + 关于类的“封装、继承、多态”
    + 封装：把实现某个功能的代码封装到函数中，起到“低耦合高内聚”的作用
    + 继承：子类及子类的实例继承了父类的属性和方法
    + 多态：函数的重载和重写(方法名相同，但是传递参数的个数或者类型不同，识别为颗两个不同的方法-> 后台语言有这个特征 但是
      Js中不存在严格意义上的冲刺狗仔)和重写（子类重写父类的方法）

JS就是基于“面向对象”思想设计的编程语言
  + 本身存在很多“内置类”
    + 每个数据类型都有一个自己所属的内置类
    + 获取的元素集合或节点集合也是有自己的类HTMLCollection/NodeList
    + 每个元素标签都有自己所属的类
    + 。。。 

  + 我们学习JS：拿出某个类的一个实例去研究和学习，当前实例研究明白后，那么当前实例所属类下的其他实例，也具备这些特点。。。


   
*/

/* 
  *1.函数数据类型
      + 普通函数
      + 箭头函数
      + 生成器函数
      + 构造函数（类）
      ...
      对象数据类型
      + 普通对象/数组对象/正则对象/日期对象...
      + 实例也是对象数据类型的（排除7种原始值类型）
      + prototype/__proto__圆形属性值也是对象（排除Function.prototype）

  *2.大部分函数（重点是构造函数）都内置一个prototype（圆形·显示原型·）的属性，属性值是一个对象，
    对象中存储属性和方法供当前类所属实例调用的公共属性和方法
    + 箭头函数是没有prototype属性的
    + 在原型对象上有一个内置的属性 construcor （构造器），属性值是当前函数本身
  
  *3.每一个对象都内置一个__proto__（原型链 隐式原型）的属性，属性值指向自己所属类的原型prototype对象
    + Object.prototype这个对象的__proto__值是null,因为object是所有对象的“基类”
*/



